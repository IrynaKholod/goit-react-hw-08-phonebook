{"version":3,"file":"static/js/494.43327831.chunk.js","mappings":"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","sources":["Redax/Selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","Pages/Contacts.jsx","Pages/Pages.styled.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nexport const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\n\nexport const getFilter = state => state.filter;\n\nexport const getVisibleContacts = createSelector(\n    [getContacts, getFilter],\n    (contacts, filter) => {\n      return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n    }\n  );","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  syle: none;\n  font-size: 12;\n  margin-bottom: 10;\n  justify-content: space-between;\n`;\n\nexport const ContactName = styled.p`\n  margin: 10px 0;\n  padding: 0;\n  font-size: 14px;\n`;\n\nexport const DeleteButton = styled.button`\n  height: 20px;\n  margin-top: 10px;\n\n  svg {\n    fill: #e776aa;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getIsLoading, getError } from '../../Redax/Selectors';\nimport {\n  List,\n  ContactItem,\n  DeleteButton,\n  ContactName,\n} from './ContactList.styled';\nimport { FiUserMinus } from 'react-icons/fi';\nimport { fetchContacts, deleteContact } from '../../Redax/Operations';\nimport { getVisibleContacts } from 'Redax/Selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <List>\n      {error && (\n        <p>Ups... Something going wrong! Please, refresh page and try again!</p>\n      )}\n      {isLoading && <b>Loading...</b>}\n      {contacts.length > 0 &&\n        contacts.map(({ id, name, number }) => (\n          <ContactItem key={id}>\n            <ContactName>\n              {name}: {number}\n            </ContactName>\n            <DeleteButton type=\"submit\" onClick={() => onDeleteContact(id)}>\n              <FiUserMinus />\n            </DeleteButton>\n          </ContactItem>\n        ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const AddContactForm = styled.form`\nmargin-top: 30px`;\n\n\nexport const FormField = styled.label`\n  margin-bottom: 15px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const FieldInput = styled.input`\n  margin-top: 5px;\n`;\n\nexport const AddContactBtn = styled.button`\nmargin-bottom: 40px;\n  background: #e776aa;\n  border: none;\n  border-radius: 5px;\n  padding: 5px 10px;\n  color: #ffffff;\n`;\n","import { nanoid } from 'nanoid';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { FormField, AddContactBtn, FieldInput, AddContactForm } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { addContact } from '../../Redax/Operations';\nimport { getContacts } from '../../Redax/Selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(getContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handlerChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n\n    if (\n      items.some(contact => contact.name.toLowerCase() === name.toLowerCase())\n    ) {\n      toast(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ id: nanoid(), name: name, number: number }));\n    e.target.reset();\n  };\n\n  return (\n    <AddContactForm autoComplete=\"off\" onSubmit={handlerSubmit}>\n      <FormField>\n        Name\n        <FieldInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Enter name\"\n          required\n          onChange={handlerChange}\n        />\n      </FormField>\n      <FormField>\n        Number\n        <FieldInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"987-65-43\"\n          required\n          onChange={handlerChange}\n        />\n      </FormField>\n      <AddContactBtn type=\"submit\">Add contact</AddContactBtn>\n      <Toaster />\n    </AddContactForm>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FormField = styled.label`\n  display: block;\n  margin-bottom: 30px;\n`;\n\nexport const SearchInput = styled.input`\n  margin-left: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport React from 'react';\nimport { SearchInput, FormField } from './Filter.styled';\nimport { filterContacts } from 'Redax/FilterSlice';\nimport { getFilter } from 'Redax/Selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  \n  return (\n    <FormField>\n      Search\n      <SearchInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => {\n          dispatch(filterContacts(e.currentTarget.value));\n        }}\n      />\n    </FormField>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { fetchContacts } from '../Redax/Operations';\nimport { getIsLoading } from '../Redax/Selectors';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { Container } from '../Pages/Pages.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactForm />\n      <Filter/>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </Container>\n  );\n}","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  align-items: 'center';\n  justify-content: 'center';\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 0 20px;\n  @media screen and (min-width: 768px) {\n    padding: 40px 40px;\n    justify-content: space-evenly;\n    flex-direction: row;\n    align-items: flex-start;\n  }\n  @media screen and (min-width: 1280px) {\n    max-width: 800px;\n  }\n`;"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","getVisibleContacts","createSelector","name","toLowerCase","includes","List","styled","ContactItem","ContactName","DeleteButton","ContactList","useSelector","dispatch","useDispatch","useEffect","fetchContacts","length","map","id","number","type","onClick","contactId","deleteContact","AddContactForm","FormField","FieldInput","AddContactBtn","ContactForm","useState","setName","setNumber","handlerChange","e","currentTarget","value","autoComplete","onSubmit","preventDefault","some","contact","toast","addContact","nanoid","target","reset","pattern","title","placeholder","required","onChange","SearchInput","Filter","filterContacts","Contacts","Helmet","Container"],"sourceRoot":""}